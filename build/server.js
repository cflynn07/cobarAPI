// Generated by CoffeeScript 1.6.3
(function() {
  var app, config, express, fs, path, pub, redisStore, store, sub;

  GLOBAL.appRoot = __dirname + '/';

  fs = require('fs');

  express = require('express.io');

  path = require('path');

  config = require(GLOBAL.appRoot + 'config/config');

  if (!GLOBAL.assetHash) {
    GLOBAL.assetHash = 'client';
  }

  require(GLOBAL.appRoot + 'config/envGlobals')(GLOBAL);

  require(GLOBAL.appRoot + 'components/oRM').setup();

  pub = require(GLOBAL.appRoot + 'components/redis').createClient();

  sub = require(GLOBAL.appRoot + 'components/redis').createClient();

  store = require(GLOBAL.appRoot + 'components/redis').createClient();

  redisStore = require(GLOBAL.appRoot + 'components/redis').createStore();

  app = express().http().io();

  GLOBAL.app = app;

  app.io.set('store', new express.io.RedisStore({
    redis: require('redis'),
    redisPub: pub,
    redisSub: sub,
    redisClient: store
  }));

  app.io.set('log level', 3);

  app.io.set('transports', ['htmlfile', 'xhr-polling', 'jsonp-polling']);

  app.configure(function() {
    app.use(express.compress());
    app.disable('x-powered-by');
    app.set('port', process.env.PORT || 8080);
    app.set('views', __dirname + '/views');
    app.set('view engine', 'ejs');
    app.use(express.logger('dev'));
    app.use(express.bodyParser());
    app.use(express.methodOverride());
    app.use(express.cookieParser());
    app.use(express.session({
      secret: 'c9d7732c0de118325e6de4582b37a4e9',
      store: redisStore,
      cookie: {
        maxAge: 31536000000
      }
    }));
    /*
      Route parrot middleware
      match api requests from socket.io & http to same handlers by modifying
      req & res objects
    */

    app.use(require(GLOBAL.appRoot + 'components/routeParrot').http);
    app.use(app.router);
    app.configure('production', function() {
      var maxAge;
      maxAge = 31536000000;
      return app.use(express["static"](path.join(__dirname, '../client'), {
        maxAge: maxAge
      }));
    });
    return app.configure('development', function() {
      var maxAge;
      maxAge = 0;
      app.use(express["static"](path.join(__dirname, '../client'), {
        maxAge: maxAge
      }));
      return app.use(express.errorHandler());
    });
  });

  app.io.route('apiRequest', function(req) {
    return require(GLOBAL.appRoot + 'components/routeParrot').socketio(req, {}, function(req, res) {
      return app.router(req, res, function() {
        return req.io.respond(config.errorResponse(404));
      });
    });
  });

  require(GLOBAL.appRoot + 'components/controllers')(app);

  /*
  test = require('./config/redis').createClient()
  setInterval () ->
    test.publish 'eventsUpdated', 'test message'
  , 1000
  */


  app.listen(app.get('port'));

  console.log('server listening on port: ' + app.get('port'));

}).call(this);
